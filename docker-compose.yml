version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: crm-postgres
    environment:
      POSTGRES_USER: crmuser
      POSTGRES_PASSWORD: crmpassword
      POSTGRES_DB: crmdb
      # Allow connections from any IP (needed for WSL/Windows access)
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crmuser -d crmdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm-network

  crm-server:
    build:
      context: .
      dockerfile: Dockerfile.crm
    container_name: crm-server
    environment:
      DATABASE_URL: postgres://crmuser:crmpassword@postgres:5432/crmdb?sslmode=disable
      JWT_SECRET: ${JWT_SECRET:-crm-secret-key-change-in-production}
      PORT: 8080
      HOST: 0.0.0.0
    ports:
      - "0.0.0.0:8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - crm-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: crm-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@crm.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "0.0.0.0:5050:80"
    depends_on:
      - postgres
    networks:
      - crm-network
    restart: unless-stopped

networks:
  crm-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local